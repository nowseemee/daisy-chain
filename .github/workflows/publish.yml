name: publish brand package
on:
  push:
    branches:
      - release
jobs:
  publish-brand:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure CI Git User
        run: |
          git config --global user.name '@daisy-chain'
          git config --global user.email 'daisy-chain@users.noreply.github.com'

      - name: Authenticate with Registry
        run: |
          yarn logout
          touch .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: restore lerna
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Run Lerna bootstrap
        run: |
          yarn bootstrap

      - name: Generate Artifacts
        run: |
          yarn generate

      - name: Build Components
        run: |
          cd packages/components
          yarn build

      - name: Build React Proxy
        run: |
          cd packages/components-react
          yarn build

      - name: Publish Brand
        run: |
          yarn publish-brand

  publish-whitelabel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure CI Git User
        run: |
          git config --global user.name '@daisy-chain'
          git config --global user.email 'daisy-chain@users.noreply.github.com'

      - name: Authenticate with Registry
        run: |
          yarn logout
          touch .npmrc
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: restore lerna
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Run Lerna bootstrap
        run: |
          yarn bootstrap

      - name: Generate Artifacts
        run: |
          WHITELABEL=1 yarn generate

      - name: Build Components
        run: |
          cd packages/components
          WHITELABEL=1 yarn build

      - name: Build React Proxy
        run: |
          cd packages/components-react
          WHITELABEL=1 yarn build

      - name: NPM Publish
        run: |
          yarn publish-whitelabel

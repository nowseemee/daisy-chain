/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DcIconActionPlay {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) If `true`, the icon changes visually
         */
        "selected"?: boolean;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface DcTextField {
        /**
          * The first name
         */
        "label": string;
        /**
          * The middle name
         */
        "value": string;
    }
}
declare global {
    interface HTMLDcIconActionPlayElement extends Components.DcIconActionPlay, HTMLStencilElement {
    }
    var HTMLDcIconActionPlayElement: {
        prototype: HTMLDcIconActionPlayElement;
        new (): HTMLDcIconActionPlayElement;
    };
    interface HTMLDcTextFieldElement extends Components.DcTextField, HTMLStencilElement {
    }
    var HTMLDcTextFieldElement: {
        prototype: HTMLDcTextFieldElement;
        new (): HTMLDcTextFieldElement;
    };
    interface HTMLElementTagNameMap {
        "dc-icon-action-play": HTMLDcIconActionPlayElement;
        "dc-text-field": HTMLDcTextFieldElement;
    }
}
declare namespace LocalJSX {
    interface DcIconActionPlay {
        /**
          * (optional) When using the icon standalone, make it meaningful for accessibility
         */
        "accessibilityTitle"?: string;
        /**
          * (optional) Sets the icon color via the `fill` attribute
         */
        "color"?: string;
        /**
          * (optional) If `true` the SVG element will get `aria-hidden="true"`
         */
        "decorative"?: boolean;
        /**
          * (optional) If `true`, the icon changes visually
         */
        "selected"?: boolean;
        /**
          * (optional) The width and height in pixels
         */
        "size"?: number;
    }
    interface DcTextField {
        /**
          * The first name
         */
        "label"?: string;
        /**
          * The middle name
         */
        "value"?: string;
    }
    interface IntrinsicElements {
        "dc-icon-action-play": DcIconActionPlay;
        "dc-text-field": DcTextField;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "dc-icon-action-play": LocalJSX.DcIconActionPlay & JSXBase.HTMLAttributes<HTMLDcIconActionPlayElement>;
            "dc-text-field": LocalJSX.DcTextField & JSXBase.HTMLAttributes<HTMLDcTextFieldElement>;
        }
    }
}
